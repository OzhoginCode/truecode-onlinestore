services:
  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: client
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - API_URL=http://server:3000
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    restart: always
    depends_on:
      - server

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: server
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PUBLIC_API_URL=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17-alpine
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 1s
      retries: 10

volumes:
  postgres_data:
